---
# List of RPM/APT packages to install.
docker_sdk_packages_default:
  - "python3-setuptools"
  - "python3-pip"
  - "{% if docker_sdk_python_externally_managed | default(false) and virtualenv is none %}python3-docker{% endif %}"
  - "{% if docker_sdk_python_externally_managed | default(false) and virtualenv is none %}python3-dbus{% endif %}"

docker_sdk_packages_dbus_deps_redhat:
  - "dbus-glib-devel"
  - "dbus-daemon"
  - "dbus-devel"
  - "dbus-x11"
  - "gcc"
  - "glib2-devel"
  - "python3-devel"

docker_sdk_packages_dbus_deps_debian:
  - "build-essential"
  - "libdbus-1-dev"
  - "libdbus-glib-1-dev"
  - "libglib2.0-dev"
  - "pkg-config"
  - "python3-dev"
  - "python3-pip"
  - "python3-venv"

docker_sdk_packages: >-
  {{ docker_sdk_packages_default +
      (lookup('vars', 'docker_sdk_packages_dbus_deps_' ~ ansible_facts.os_family | lower)
       if virtualenv is not none else []) }}

# List of Python packages to install via Pip.
# NOTE(mnasiadka) docker 3.0.0 is in kolla-ansible requirements
docker_sdk_pip_packages:
  - "docker>=6.0.0,<7.0.0"
  - "requests<2.32"
  - "dbus-python"

# APT cache TTL in seconds.
apt_cache_valid_time: 3600

# Version of python used to execute Ansible modules.
host_python_version: "{{ ansible_facts.python.version.major }}.{{ ansible_facts.python.version.minor }}"

# Path to a virtualenv in which to install python packages. If None, a
# virtualenv will not be used.
virtualenv:

# Whether the virtualenv will inherit packages from the global site-packages
# directory. This is typically required for modules such as yum and apt which
# are not available on PyPI.
virtualenv_site_packages: True

create_kolla_user: False
kolla_user: "kolla"

# Owner of the virtualenv.
docker_sdk_virtualenv_owner: "{{ kolla_user if create_kolla_user | bool else omit }}"

# A pip constraints file to use when installing the Docker SDK.
docker_sdk_upper_constraints_file:
