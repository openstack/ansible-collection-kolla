[tox]
minversion = 3.18
envlist = py3,linters
ignore_basepython_conflict = True

[testenv]
basepython = python3
usedevelop = True
allowlist_externals = find
                      rm
deps = -c{env:TOX_CONSTRAINTS_FILE:https://releases.openstack.org/constraints/upper/2025.1}
       -r{toxinidir}/requirements.txt
       -r{toxinidir}/test-requirements.txt
passenv = http_proxy,HTTP_PROXY,https_proxy,HTTPS_PROXY,no_proxy,NO_PROXY
          OS_STDOUT_CAPTURE,OS_STDERR_CAPTURE,OS_LOG_CAPTURE,OS_TEST_TIMEOUT
          PYTHON,OS_TEST_PATH,LISTOPT,IDOPTION
commands =
  find . -type f -name "*.py[c|o]" -delete -o -type l -name "*.py[c|o]" -delete
  find . -type d -name "__pycache__" -delete
  stestr run --slowest {posargs}

[testenv:debug]
commands = oslo_debug_helper -t tests {posargs}

[testenv:cover]
setenv = VIRTUAL_ENV={envdir}
         NOSE_WITH_COVERAGE=1
         NOSE_COVER_BRANCHES=1
         NOSE_COVER_HTML=1
         NOSE_COVER_HTML_DIR={toxinidir}/cover
         PYTHON=coverage run --source kolla_ansible,ansible/action_plugins,ansible/library,ansible/roles/keystone/files/ --parallel-mode
commands =
  stestr run {posargs}
  coverage combine
  coverage html -d cover
  coverage xml -o cover/coverage.xml

[testenv:venv]
deps =
  -c{env:TOX_CONSTRAINTS_FILE:https://releases.openstack.org/constraints/upper/2025.1}
  -r{toxinidir}/test-requirements.txt
  -r{toxinidir}/doc/requirements.txt
commands = {posargs}

[testenv:docs]
skip_install = true
deps =
  -c{env:TOX_CONSTRAINTS_FILE:https://releases.openstack.org/constraints/upper/2025.1}
  -r{toxinidir}/doc/requirements.txt
commands =
  rm -rf doc/build/html
  {[testenv:docs-iterative]commands}

[testenv:docs-iterative]
envdir = {toxworkdir}/docs
skip_install = {[testenv:docs]skip_install}
deps = {[testenv:docs]deps}
commands =
  sphinx-build -n -W --keep-going -b html doc/source doc/build/html

[testenv:pdf-docs]
allowlist_externals = make
                      rm
skip_install = {[testenv:docs]skip_install}
deps = {[testenv:docs]deps}
commands =
  rm -rf doc/build/pdf
  sphinx-build -n -W --keep-going -b latex doc/source doc/build/pdf
  make -C doc/build/pdf

[testenv:releasenotes]
skip_install = {[testenv:docs]skip_install}
deps = {[testenv:docs]deps}
commands =
  rm -rf releasenotes/build/html
  sphinx-build -n -W --keep-going -b html releasenotes/source releasenotes/build/html

[testenv:linters]
passenv = HOME
deps =
  -c{env:TOX_CONSTRAINTS_FILE:https://releases.openstack.org/constraints/upper/2025.1}
  -r{toxinidir}/test-requirements.txt
  -r{toxinidir}/doc/requirements.txt
allowlist_externals = bash
                      find
commands =
  {[testenv:pep8]commands}
  {[testenv:doc8]commands}
  {[testenv:bandit]commands}
  {[testenv:ansible-sanity]commands}
  {[testenv:ansible-lint]commands}

[testenv:pep8]
deps = {[testenv:linters]deps}
commands =
  flake8 {posargs}

[flake8]
show-source = True
# NOTE: Default ignore list is *not* empty!
# W504 line break after binary operator
# (W503 and W504 are incompatible and we need to choose one of them.
#  Existing codes follows W503, so we disable W504.):
ignore = W504
exclude = .eggs,.git,.tox,doc

[testenv:doc8]
deps = {[testenv:linters]deps}
commands =
  doc8 doc/source
  reno lint
  doc8 -e '.yaml' releasenotes/notes/

[testenv:bandit]
# B303: Use of insecure MD2, MD4, MD5, or SHA1 hash function.
deps = {[testenv:linters]deps}
commands = bandit --skip B303 -r plugins tests

[testenv:ansible-sanity]
deps = {[testenv:linters]deps}
commands = bash {toxinidir}/tools/run-ansible-sanity.sh {toxinidir}

[testenv:ansible-lint]
deps = {[testenv:linters]deps}
commands =
  ansible-galaxy collection install ansible.posix community.general
  ansible-lint -p
